# Copyright 2016 Dennis Vriend
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "general.conf"
include "docker.conf"

jdbc-journal {
  slick = ${slick}
  slick.db.numThreads = 10
  slick.db.maxConnections = 30
  slick.db.minConnections = 1
  slick.db.connectionTimeout = 1800000 // 30 minutes

  recovery-event-timeout = 60m

  event-adapters {
    test-write-event-adapter = "akka.persistence.jdbc.query.EventAdapterTest$TestWriteEventAdapter"
    test-read-event-adapter  = "akka.persistence.jdbc.query.EventAdapterTest$TestReadEventAdapter"
  }

  event-adapter-bindings {
    "akka.persistence.jdbc.query.EventAdapterTest$Event"            = test-write-event-adapter
    "akka.persistence.jdbc.query.EventAdapterTest$TaggedEvent"      = test-write-event-adapter
    "akka.persistence.jdbc.query.EventAdapterTest$TaggedAsyncEvent" = test-write-event-adapter
    "akka.persistence.jdbc.query.EventAdapterTest$EventAdapted"     = test-read-event-adapter
  }

}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  slick = ${slick}
  slick.db.numThreads = 10
  slick.db.maxConnections = 30
  slick.db.minConnections = 1
  slick.db.connectionTimeout = 1800000 // 30 minutes
}

# the akka-persistence-query provider in use
jdbc-read-journal {
  refresh-interval = "10ms"

  max-buffer-size = "500"

  add-shutdown-hook = true

  slick = ${slick}
  slick.db.numThreads = 10
  slick.db.maxConnections = 30
  slick.db.minConnections = 1
  slick.db.connectionTimeout = 1800000 // 30 minutes
}

slick {
  profile = "slick.jdbc.PostgresProfile$"
  db {
    host = "localhost"
    host = ${?POSTGRES_HOST}
    url = "jdbc:postgresql://"${slick.db.host}":5432/docker?reWriteBatchedInserts=true"
    user = "docker"
    user = ${?POSTGRES_USER}
    password = "docker"
    password = ${?POSTGRES_PASSWORD}
    driver = "org.postgresql.Driver"
    connectionTestQuery = "SELECT 1" // postgres doesnt support connection timeout
  }
}
