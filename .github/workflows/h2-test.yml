name: H2 Unit Tests

on:
  pull_request:
  push:
    branches:
      - main
      - master
    tags-ignore: [ v.* ]

permissions:
  contents: read

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          # leaving out some combinations (note that `checks.yml` doesn't run H2 test)
          - { scalaVersion: "2.12", jdkVersion: "1.8.0",  jvmName: "temurin:1.8.0",  extraOpts: '' }
          - { scalaVersion: "2.12", jdkVersion: "1.11.0", jvmName: "temurin:1.11.0", extraOpts: '-J-XX:+UnlockExperimentalVMOptions -J-XX:+UseJVMCICompiler' }
          # { scalaVersion: "2.12", jdkVersion: "1.17.0", jvmName: "temurin:1.17.0", extraOpts: '' }

          - { scalaVersion: "2.13", jdkVersion: "1.8.0",  jvmName: "temurin:1.8.0",  extraOpts: '' }
          # { scalaVersion: "2.13", jdkVersion: "1.11.0", jvmName: "temurin:1.11.0", extraOpts: '-J-XX:+UnlockExperimentalVMOptions -J-XX:+UseJVMCICompiler' }
          - { scalaVersion: "2.13", jdkVersion: "1.17.0", jvmName: "temurin:1.17.0", extraOpts: '' }

          # { scalaVersion: "3.1",  jdkVersion: "1.8.0",  jvmName: "temurin:1.8.0",  extraOpts: '' }
          # { scalaVersion: "3.1",  jdkVersion: "1.11.0", jvmName: "temurin:1.11.0", extraOpts: '-J-XX:+UnlockExperimentalVMOptions -J-XX:+UseJVMCICompiler' }
          # { scalaVersion: "3.1",  jdkVersion: "1.17.0", jvmName: "temurin:1.17.0", extraOpts: '' }
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0

      - name: Checkout GitHub merge
        if: github.event.pull_request
        run: |-
          git fetch origin pull/${{ github.event.pull_request.number }}/merge:scratch
          git checkout scratch

      - name: Cache Coursier cache
        uses: coursier/cache-action@v6.4.0

      - name: Set up JDK ${{ matrix.jdkVersion }}
        uses: coursier/setup-action@v1.3.0
        with:
          jvm: ${{ matrix.jvmName }}

      - name: Run tests with Scala ${{ matrix.scalaVersion }} on JDK ${{ matrix.jdkVersion }}
        run: sbt "++ ${{ matrix.scalaVersion }} test" ${{ matrix.extraOpts }}

      - name: Print logs on failure
        if: ${{ failure() }}
        run: find . -name "*.log" -exec ./scripts/cat-log.sh {} \;
