create table EVENT_JOURNAL (
    ORDERING NUMBER(19) NOT NULL,
    DELETED CHAR(1) DEFAULT 0 NOT NULL check (DELETED in (0, 1)),
    PERSISTENCE_ID VARCHAR2(255) NOT NULL,
    SEQUENCE_NUMBER NUMBER(19) NOT NULL,
    WRITER VARCHAR2(254) NOT NULL,
    WRITE_TIMESTAMP NUMBER(19) NOT NULL,
    EVENT_MANIFEST VARCHAR2(254),
    EVENT_PAYLOAD BLOB NOT NULL,
    EVENT_SER_ID NUMBER(10) NOT NULL,
    EVENT_SER_MANIFEST VARCHAR2(254),
    META_PAYLOAD BLOB,
    META_SER_ID NUMBER(10),
    META_SER_MANIFEST VARCHAR2(254))
/

alter table EVENT_JOURNAL add constraint EVENT_JOURNAL_PK primary key(PERSISTENCE_ID,SEQUENCE_NUMBER)
/

ALTER TABLE EVENT_JOURNAL ADD CONSTRAINT EVENT_JOURNAL_ORDERING_IDX UNIQUE(ORDERING)
/

create sequence EVENT_JOURNAL__ORDERING_SEQ start with 1 increment by 1
/

create or replace trigger EVENT_JOURNAL__ORDERING_TRG before insert on EVENT_JOURNAL referencing new as new for each row when (new.ORDERING is null) begin select EVENT_JOURNAL__ORDERING_seq.nextval into :new.ORDERING from sys.dual; end;
/


create table "SNAPSHOT" (
    PERSISTENCE_ID VARCHAR(255) NOT NULL,
    SEQUENCE_NUMBER NUMERIC NOT NULL,
    CREATED NUMERIC NOT NULL,
    SNAPSHOT_SER_ID NUMBER(10) NOT NULL,
    SNAPSHOT_SER_MANIFEST VARCHAR(255),
    SNAPSHOT_PAYLOAD BLOB NOT NULL,
    META_SER_ID NUMBER(10),
    META_SER_MANIFEST VARCHAR(255),
    META_PAYLOAD BLOB)
/

alter table "SNAPSHOT" add constraint "SNAPSHOT_pk" primary key(PERSISTENCE_ID,SEQUENCE_NUMBER)
/
